version: "2017-09-20"
pipeline:
- id: build
  vm_config:
    type: linux
    image: "cdp-runtime/go"
    size: large
  type: script
  env:
    GOFLAGS: "-mod=readonly"
  cache:
    paths:
    - /go/pkg/mod       # pkg cache for Go modules
    - ~/.cache/go-build # Go build cache
  commands:
  - desc: test
    cmd: |
      go mod tidy
      if ! git diff --quiet go.mod go.sum; then
      echo "Running go mod tidy modified go.mod and/or go.sum"
      exit 1
      fi
      make check
      make test
  - desc: build
    cmd: |
      make build.docker
  - desc: push
    cmd: |
      IMAGE=registry-write.opensource.zalan.do/teapot/stackset-controller-test
      IMAGE=$IMAGE VERSION=$CDP_BUILD_VERSION make build.push
  - desc: Build and push image to Zalando's registry
    cmd: |
      IMAGE=container-registry-test.zalando.net/teapot/stackset-controller
      make build.linux.amd64 build.linux.arm64 build/linux/amd64/e2e build/linux/arm64/e2e

      docker buildx create --config /etc/cdp-buildkitd.toml --driver-opt network=host --bootstrap --use
      docker buildx build --rm --build-arg BASE_IMAGE=container-registry.zalando.net/library/alpine-3.13:latest -t "${IMAGE}:${CDP_BUILD_VERSION}" --platform linux/amd64,linux/arm64 --push .
      docker buildx build --rm --build-arg BASE_IMAGE=container-registry.zalando.net/library/alpine-3.13:latest -t "${IMAGE}-e2e:${CDP_BUILD_VERSION}" -f Dockerfile.e2e --platform linux/amd64,linux/arm64 --push .

- id: e2e
  type: process
  desc: "E2E Tests"
  target: stups-test
  process: microservice_standard_test
  config:
    apply_manifests:
      env:
      - name: APPLICATION
        value: stackset-controller-test
      - name: DEPLOYMENT_PATH
        value: e2e
      - name: IMAGE
        value: "container-registry-test.zalando.net/teapot/stackset-controller:#{CDP_BUILD_VERSION}"
      - name: CONTROLLER_ID
        value: "#{CDP_BUILD_VERSION}"
      - name: CLUSTER_DOMAIN
        value: stups-test.zalan.do
      - name: CLUSTER_DOMAIN_INTERNAL
        value: ingress.cluster.local
    end2end_tests:
      metadata:
        name: e2e
      spec:
        serviceAccountName: stackset-controller
        restartPolicy: Never
        containers:
          - name: e2e
            image: "container-registry-test.zalando.net/teapot/stackset-controller-e2e:#{CDP_BUILD_VERSION}"
            args:
            - "-test.parallel"
            - "64"
            env:
              - name: "CONTROLLER_ID"
                value: "#{CDP_BUILD_VERSION}"
              - name: CLUSTER_DOMAIN
                value: stups-test.zalan.do
              - name: CLUSTER_DOMAIN_INTERNAL
                value: ingress.cluster.local
              - name: "E2E_NAMESPACE"
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
- id: buildprod
  when:
    branch: master
  vm_config:
    type: linux
    image: "cdp-runtime/go"
    size: large
  type: script
  env:
    GOFLAGS: "-mod=readonly"
  cache:
    paths:
    - /go/pkg/mod       # pkg cache for Go modules
    - ~/.cache/go-build # Go build cache
  commands:
  - desc: create tag and release
    cmd: |
      LATEST_VERSION=$(git describe --tags --always | awk -F \- '{print $1}')
      CUR_PART=$(echo $LATEST_VERSION | awk -F . '{print $1"."$2}')
      VERSION_PART=$(cat VERSION)
      OLD_PATCH=$(echo $LATEST_VERSION | awk -F . '{print $3}')
      NEW_PATCH=$((OLD_PATCH + 1))
      if [ "$CUR_PART" != "$VERSION_PART" ]; then NEW_PATCH=0; fi
      VERSION=${VERSION_PART}.${NEW_PATCH}
      echo "Creating release for tag: ${VERSION}"
      git gh-tag $VERSION
      echo "create and push docker container"
      IMAGE=registry-write.opensource.zalan.do/teapot/stackset-controller
      IMAGE=$IMAGE VERSION=$VERSION make build.docker
      git diff --stat --exit-code
      IMAGE=$IMAGE VERSION=$VERSION make build.push

      # Build and push image to Zalando's registry
      IMAGE=container-registry-test.zalando.net/teapot/stackset-controller
      make build.linux.amd64 build.linux.arm64

      docker buildx create --config /etc/cdp-buildkitd.toml --driver-opt network=host --bootstrap --use
      docker buildx build --rm --build-arg BASE_IMAGE=container-registry.zalando.net/library/alpine-3.13:latest -t "${IMAGE}:${VERSION}" --platform linux/amd64,linux/arm64 --push .
      cdp-promote-image "${IMAGE}:${VERSION}"

      echo "create release page"
      tf=$(mktemp)
      echo -e "### Changes\n" >$tf
      git log -1 --pretty=%B | grep -v 'Signed-off-by:' | grep -v -E '^\s*$' | grep -vE '^\*' >>$tf
      echo -e "\n### Docker image\n" >>$tf
      echo -e "Docker image is available in Zalando's Open Source registry:\n" >>$tf
      echo -e '```' >>$tf
      echo -e "docker run -it registry.opensource.zalan.do/teapot/stackset-controller:${VERSION} --help" >>$tf
      echo -e '```' >>$tf
      echo "################################"
      cat $tf
      echo "################################"
      git gh-release --message-from-file "${tf}" $VERSION
