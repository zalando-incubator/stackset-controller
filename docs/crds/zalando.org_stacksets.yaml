
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: stacksets.zalando.org
spec:
  additionalPrinterColumns:
  - JSONPath: .status.stacks
    name: Desired
    type: string
  - JSONPath: .status.readyStacks
    name: Ready
    type: string
  - JSONPath: .status.stacksWithTraffic
    name: Traffic
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: string
  group: zalando.org
  names:
    kind: StackSet
    listKind: StackSetList
    plural: stacksets
    singular: stackset
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: StackSet describes an application resource.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: StackSetSpec is the spec part of the StackSet.
          properties:
            externalIngress:
              description: ExternalIngress is used to specify the backend port to
                generate the services for the stacks.
              properties:
                backendPort:
                  anyOf:
                  - type: integer
                  - type: string
                  x-kubernetes-int-or-string: true
              required:
              - backendPort
              type: object
            ingress:
              description: Ingress is the information we need to create ingress and
                service. Ingress is optional, because other controller might create
                ingress objects, but stackset owns the traffic switch. In this case
                we would only have a Traffic, but no ingress.
              properties:
                backendPort:
                  anyOf:
                  - type: integer
                  - type: string
                  x-kubernetes-int-or-string: true
                hosts:
                  items:
                    type: string
                  type: array
                metadata:
                  type: object
                path:
                  type: string
              required:
              - backendPort
              - hosts
              - path
              type: object
            stackLifecycle:
              description: StackLifecycle defines the cleanup rules for old stacks.
              properties:
                limit:
                  description: Limit defines the maximum number of Stacks to keep
                    around. If the number of Stacks exceeds the limit then the oldest
                    stacks which are not getting traffic are deleted.
                  format: int32
                  type: integer
                scaledownTTLSeconds:
                  description: ScaledownTTLSeconds is the ttl in seconds for when
                    Stacks of a StackSet should be scaled down to 0 replicas in case
                    they are not getting traffic. Defaults to 300 seconds.
                  format: int64
                  type: integer
              type: object
            stackTemplate:
              description: StackTemplate container for resources to be created that
                belong to one stack.
              properties:
                metadata:
                  type: object
                spec:
                  description: StackSpecTemplate is the spec part of the Stack.
                  properties:
                    version:
                      type: string
                  required:
                  - version
                  type: object
              required:
              - spec
              type: object
            traffic:
              description: Traffic is the mapping from a stackset to stack with weights.
                It defines the desired traffic. Clients that orchestrate traffic switching
                should write this part.
              items:
                description: DesiredTraffic is the desired traffic setting to direct
                  traffic to a stack. This is meant to use by clients to orchestrate
                  traffic switching.
                properties:
                  stackName:
                    type: string
                  weight: {}
                required:
                - stackName
                - weight
                type: object
              type: array
          required:
          - stackLifecycle
          - stackTemplate
          type: object
        status:
          description: StackSetStatus is the status section of the StackSet resource.
          properties:
            observedStackVersion:
              description: 'ObservedStackVersion is the version of Stack generated
                from the current StackSet definition. TODO: add a more detailed comment'
              type: string
            readyStacks:
              description: 'ReadyStacks is the number of stacks managed by the StackSet
                which are considered ready. a Stack is considered ready if: replicas
                == readyReplicas == updatedReplicas.'
              format: int32
              type: integer
            stacks:
              description: Stacks is the number of stacks managed by the StackSet.
              format: int32
              type: integer
            stacksWithTraffic:
              description: StacksWithTraffic is the number of stacks managed by the
                StackSet which are getting traffic.
              format: int32
              type: integer
            traffic:
              description: Traffic is the actual traffic setting on services for this
                stackset
              items:
                description: Traffic is the actual traffic setting on services for
                  this stackset, controllers interested in current traffic decision
                  should read this.
                properties:
                  serviceName:
                    type: string
                  servicePort:
                    anyOf:
                    - type: integer
                    - type: string
                    x-kubernetes-int-or-string: true
                  stackName:
                    type: string
                  weight: {}
                required:
                - serviceName
                - servicePort
                - stackName
                - weight
                type: object
              type: array
          type: object
      required:
      - spec
      - status
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
